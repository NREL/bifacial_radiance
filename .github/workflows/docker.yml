name: Push Docker image to GitHub Pack Registry

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - development

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
  IMAGE_NAME: "$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
  DOCKERFILE_PATH: "./docker/Dockerfile"

jobs:

  build-and-push-docker-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Print triggering event info
        run: |
          echo "${{ github.actor }} triggered run #${{ github.run_number }} with event type ${{ github.event_name }}"
      # - name: Build image
      #   run: docker build . --file "$DOCKERFILE_PATH" --tag $IMAGE_NAME
        
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: "$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          image_tag: latest
          context: '.'
          dockerfile: "./docker/Dockerfile"
          push_image_and_stages: false

      - name: Log into registries
        run: |
          <<<"${{ secrets.GITHUB_TOKEN }}"         docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          <<<"${{ secrets.DOCKERHUB_NREL_TOKEN }}" docker login -u ${{ secrets.DOCKERHUB_NREL_USER }} --password-stdin
        
      - name: Push image to repositories
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          REF=$VERSION
          # Use Docker `latest` tag convention
          [ "$VERSION" == "development" ] && VERSION=latest
          
          GITHUB_IMAGE_URL=docker.pkg.github.com/$IMAGE_NAME/$REF
          DOCKER_IMAGE_URL=docker.io/nrel/bifacial_radiance
          # Change all uppercase to lowercase
          GITHUB_IMAGE_URL="${GITHUB_IMAGE_URL,,}"
          DOCKER_IMAGE_URL="${DOCKER_IMAGE_URL,,}"
          echo VERSION=$VERSION
          
          # Push image to GitHub Packages.
          (
            echo GITHUB_IMAGE_URL=$GITHUB_IMAGE_URL
            echo IMAGE_NAME=$IMAGE_NAME	
            docker tag $IMAGE_NAME $GITHUB_IMAGE_URL:$VERSION
            docker push $GITHUB_IMAGE_URL:$VERSION
          ) &
          
          # Push image to Docker Hub.
          (
            echo DOCKER_IMAGE_URL=${DOCKER_IMAGE_URL,,}
            echo IMAGE_NAME=$IMAGE_NAME	 
            docker tag $IMAGE_NAME ${DOCKER_IMAGE_URL,,}:$VERSION
            docker push ${DOCKER_IMAGE_URL,,}:$VERSION
          ) &
          
          wait